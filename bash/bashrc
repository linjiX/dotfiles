#!/bin/bash
#############################################################################
#  https://github.com/linjiX/dotfiles                                       #
#   _  _          _  _ __  __    __   _         _     __  _  _              #
#  | |(_) _ __   (_)(_)\ \/ /   / /__| |  ___  | |_  / _|(_)| |  ___  ___   #
#  | || || '_ \  | || | \  /   / // _` | / _ \ | __|| |_ | || | / _ \/ __|  #
#  | || || | | | | || | /  \  / /| (_| || (_) || |_ |  _|| || ||  __/\__ \  #
#  |_||_||_| |_|_/ ||_|/_/\_\/_/  \__,_| \___/  \__||_|  |_||_| \___||___/  #
#              |__/                                                         #
#                                                                           #
#############################################################################

# shellcheck source=/dev/null
true

export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export VISUAL=nvim
export MANPAGER='nvim +Man!'

_UNAME=$(uname)

# MacOS
##################################################################################################
if [ "$_UNAME" == Darwin ]; then
    export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles

    # bash_completion
    [ -r /usr/local/etc/profile.d/bash_completion.sh ] &&
        source /usr/local/etc/profile.d/bash_completion.sh
    # _expand() { :; }
fi

# PS1
##################################################################################################
_WHITE='\[\e[01;36m\]'
_RED='\[\e[01;31m\]'
_PURPLE='\[\e[01;35m\]'
_LIGHT_GRAY='\[\e[01;34m\]'
_DARK_GRAY='\[\e[01;32m\]'
_RESET='\[\e[00m\]'

_python3_version() {
    local version
    version=$(python3 --version 2>/dev/null | awk '{print $2}')
    if [ -z "$version" ]; then
        return
    fi
    echo "  $version"
}

_timer_start() {
    _timer=${_timer:-$SECONDS}
}

_timer_stop() {
    _timer_show=$((SECONDS - _timer))
    unset _timer
}

_seconds2days() { # convert integer seconds to Ddays,HH:MM:SS
    if [ "$1" -lt 3 ]; then
        return
    fi
    local s=$(($1 % 60))
    local m=$(($1 / 60 % 60))
    local h=$(($1 / 60 / 60 % 24))
    local d=$(($1 / 60 / 60 / 24))
    printf " took "
    printf "%ddays,%02dh%02dm%02ds" $d $h $m $s |
        sed 's/^1days/1day/;s/^0days,\(00[h|m|s]\)*//;s/^0//'
}

trap '_timer_start' DEBUG
PROMPT_COMMAND=_timer_stop

if [[ -n "$NVIM" || -n "$VIM_TERMINAL" ]]; then
    _PS1_END=">"
else
    _PS1_END="\$"
fi

if [ "$_UNAME" == Darwin ]; then
    _PS1_HEAD="\n$_RED($_WHITE\u@\h$_RED)-($_WHITE\w$_RED)"
    _PS1_TAIL="$_RED\n($_WHITE\t$_RED)$_PS1_END $_RESET"
else
    _PS1_HEAD="\n$_PURPLE($_WHITE\u@\h$_PURPLE)-($_WHITE\w$_PURPLE)"
    _PS1_TAIL="$_PURPLE\n($_WHITE\t$_PURPLE)$_PS1_END $_RESET"
fi
_PS1_GIT="$_PURPLE""\$(__git_ps1 \"  %s\")"
_PS1_PYTHON="$_DARK_GRAY""\$(_python3_version)"
_PS1_TIMER="$_LIGHT_GRAY""\$(_seconds2days \${_timer_show})"

PS1=$_PS1_HEAD$_PS1_GIT$_PS1_PYTHON$_PS1_TIMER$_PS1_TAIL

# fzf
##################################################################################################
# [ -r ~/.fzf.bash ] && source ~/.fzf.bash
_FZF_GIT_COMMAND='git ls-files -c -o --exclude-standard'
_FZF_RG_COMMAND="rg --files --color=never --hidden -g '!.git/' -g '!*.swp'"

export FZF_CTRL_T_COMMAND="($_FZF_GIT_COMMAND || $_FZF_RG_COMMAND) 2> /dev/null"

# setxkbmap
##################################################################################################
if [ "$_UNAME" != Darwin ] &&
    command -v setxkbmap >/dev/null 2>&1 &&
    [[ -n $DISPLAY ]] &&
    [[ -z $SSH_CLIENT ]]; then
    setxkbmap -option ""
    # setxkbmap -option "ctrl:nocaps"
    setxkbmap -option "caps:escape"
    setxkbmap -option "shift:both_capslock"
fi

# bind
##################################################################################################
if [ "$_UNAME" == Darwin ]; then
    stty werase undef
    stty discard undef
fi
bind '\C-w:unix-filename-rubout'

# alias
##################################################################################################
if [ "$_UNAME" == Darwin ]; then
    alias tree='tree -C'
    alias ls='ls -G'
    alias ll='ls -alFG'
    alias la='ls -AG'
    alias l='ls -CFG'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    alias n='cd ~/Desktop/nfs/'
    alias C='cd ~/Library/Caches/'
else
    alias n='cd /mnt/nfs/'
    alias C='cd ~/.cache/'
fi

alias nvi='nvim'
alias t='tmux'
alias r='ranger'

alias c='cd ~/.config/'
alias d='cd ~/.config/dotfiles/'
alias v='cd ~/.config/nvim/'
alias w='cd ~/workspace/'
alias g='cd ~/workspace/github/'
alias h='cd ~/workspace/hit/'
alias o='cd ~/workspace/office/'
alias e='cd ~/workspace/engineer/'
alias D='cd ~/Downloads/'
alias S='cd ~/.local/share/'

alias root='cd $(git rev-parse --show-toplevel)'

# pip
##################################################################################################
_pip_completion() {
    # shellcheck disable=SC2207
    COMPREPLY=($(COMP_WORDS="${COMP_WORDS[*]}" \
        COMP_CWORD=$COMP_CWORD \
        PIP_AUTO_COMPLETE=1 $1 2>/dev/null))
}
complete -o default -F _pip_completion pip pip3

# pyenv
##################################################################################################
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv &>/dev/null; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# nvm
##################################################################################################
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"                                       # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# docker
##################################################################################################
_DOCKER_PRE='docker run -it --rm -v ~/workspace:/home/linji/workspace --detach-keys="ctrl-s" '
_DOCKER_XENIAL='-h xenial linjixue/ubuntu:16.04'
_DOCKER_FOCAL='-h focal linjixue/ubuntu:20.04'
# shellcheck disable=SC2139
alias xenial="$_DOCKER_PRE$_DOCKER_XENIAL"
# shellcheck disable=SC2139
alias focal="$_DOCKER_PRE$_DOCKER_FOCAL"

if [ "$_UNAME" == Darwin ]; then
    if [ -r /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion ]; then
        _docker() {
            source /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion
        }
        complete -F _docker docker
    fi

    if [ -r /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion ]; then
        _docker_compose() {
            source /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion
        }
        complete -F _docker_compose docker-compose
    fi
fi

# tensorflow
##################################################################################################
export TF_XLA_FLAGS=--tf_xla_cpu_global_jit

# git
##################################################################################################
source ~/.config/dotfiles/bash/git.bash

# private
##################################################################################################
[ -r ~/.config/dotfiles/bash/private.bash ] && source ~/.config/dotfiles/bash/private.bash

# PATH
##################################################################################################
if [ "$_UNAME" == Darwin ]; then
    export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
fi
# Remove duplicate items in $PATH
PATH="$(echo -n "$PATH" | awk -v RS=: '!(a[$0]++) {printf("%s%s", sep, $0); sep=RS}')"

# neofetch
##################################################################################################
# neofetch 2>/dev/null

# if [[ ! $TERM =~ screen  && ! $VIM ]]; then
#     exec tmux
# fi
# if [ ! $VIM ]; then
#     tmux attach &> /dev/null
#     if [[ ! $TERM =~ screen  && ! $VIM ]]; then
#         exec tmux
#     fi
# fi

# vim:ft=sh
