#############################################################################
#  https://github.com/linjiX/dotfiles                                       #
#   _  _          _  _ __  __    __   _         _     __  _  _              #
#  | |(_) _ __   (_)(_)\ \/ /   / /__| |  ___  | |_  / _|(_)| |  ___  ___   #
#  | || || '_ \  | || | \  /   / // _` | / _ \ | __|| |_ | || | / _ \/ __|  #
#  | || || | | | | || | /  \  / /| (_| || (_) || |_ |  _|| || ||  __/\__ \  #
#  |_||_||_| |_|_/ ||_|/_/\_\/_/  \__,_| \___/  \__||_|  |_||_| \___||___/  #
#              |__/                                                         #
#                                                                           #
#############################################################################

set-option -g base-index 1
# set-option -g mouse on
set-option -g renumber-windows on
set-option -g display-panes-time 1500
set-option -g escape-time 0
set-option -g default-terminal "screen-256color"
set-option -g history-limit 20000

set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{pane_current_command}"
set-window-option -g monitor-activity off
set-window-option -g monitor-bell off
# set-window-option -g bell-action any

# set-window-option -g window-status-bell-style bg=default,bold,underscore
# set-window-option -g window-status-activity-style bg=default,bold,underscore
# set-window-option -g window-status-current-style bg=default
# set-window-option -g window-status-current-style fg=default,bold,underscore

set -g prefix M-w
unbind C-b

bind-key C-r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R
bind-key '\' last-pane

bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n 'M-\' last-pane

# @plugin 'christoomey/vim-tmux-navigator'
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim || $is_fzf" "send-keys C-j" 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim || $is_fzf" "send-keys C-k" 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" "send-keys C-l" 'select-pane -R'

if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\' 'last-pane'" \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\' 'last-pane'"

bind-key -n 'M-a' if-shell "$is_vim" "send-keys M-a" 'new-window -c "#{pane_current_path}"'
bind-key -n 'M--' if-shell "$is_vim" "send-keys M--" 'select-window -p'
bind-key -n 'M-=' if-shell "$is_vim" "send-keys M-=" 'select-window -n'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' last-pane
bind-key M-: command-prompt

bind-key w select-pane -t :.+
bind-key W display-panes

bind-key x swap-pane -D
bind-key X swap-pane -U
bind-key -n M-x swap-pane -D
bind-key -n M-X swap-pane -U

bind-key ] switch-client -n
bind-key [ switch-client -p

bind-key -n M-] switch-client -n
bind-key -n M-[ switch-client -p

bind-key - select-window -p
bind-key = select-window -n
bind-key ` last-window

# bind-key -n M-- select-window -p
# bind-key -n M-= select-window -n
bind-key -n M-` last-window

bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9
bind-key 0 select-window -t 10

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-_' swap-window -t -1" \
    "bind-key -n 'M-_' swap-window -d -t -1"

if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-+' swap-window -t +1" \
    "bind-key -n 'M-+' swap-window -d -t +1"

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key n split-window -h
bind-key N split-window -v

bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-n split-window -h
bind-key -n M-N split-window -v

bind-key a new-window
bind-key A new-session
bind-key t list-windows
bind-key T list-sessions
bind-key c choose-window
bind-key C choose-session
bind-key q confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key Q confirm-before -p "kill-session #S? (y/n)" kill-session

# bind-key -n M-a new-window -c "#{pane_current_path}"
bind-key -n M-A new-session
bind-key -n M-t list-windows
bind-key -n M-T list-sessions
bind-key -n M-c choose-window
bind-key -n M-C choose-session
bind-key -n M-q confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -n M-Q confirm-before -p "kill-session #S? (y/n)" kill-session

bind-key r command-prompt -I "#W" "rename-window '%%'"
bind-key R command-prompt -I "#S" "rename-session '%%'"
bind-key -n M-r command-prompt -I "#W" "rename-window '%%'"
bind-key -n M-R command-prompt -I "#S" "rename-session '%%'"

bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r - resize-pane -D 5
bind-key -r + resize-pane -U 5

bind-key Escape copy-mode

bind-key M set -g mouse on\; display 'Mouse: ON'
bind-key m set -g mouse off\; display 'Mouse: Off'

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi 'Y' send -X copy-line
bind-key -Tcopy-mode-vi 'i' send -X cancel

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# set -g @prefix_highlight_show_copy_mode 'on'

source ~/.config/dotfiles/tmux/tmux.airline
run -b '~/.tmux/plugins/tpm/tpm'

# vim:ft=tmux
